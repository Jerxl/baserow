# Generated by Django 5.0.13 on 2025-08-21 16:54

import django.db.models.deletion
from django.db import migrations, models

import baserow.core.fields
import baserow.core.mixins


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("database", "0198_pendingsearchvalueupdate_pendingsearchvaluedeletion_frd"),
    ]

    operations = [
        migrations.AddField(
            model_name="table",
            name="field_rules_validity_column_added",
            field=models.BooleanField(
                db_default=False,
                default=False,
                help_text="Indicates whether the table has had the field_rules_are_valid column added.",
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="FieldRule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", baserow.core.fields.SyncedDateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Allows to enable/disable a field rule."
                    ),
                ),
                (
                    "is_valid",
                    models.BooleanField(
                        default=True,
                        help_text="Tells if the rule is valid in the context of a table. This field is read-only.",
                    ),
                ),
                (
                    "error_text",
                    models.TextField(
                        help_text="Stores information about validation error, if it's present. This field is read-only.",
                        null=True,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="field_rule",
                        to="contenttypes.contenttype",
                        verbose_name="content type",
                    ),
                ),
                (
                    "table",
                    models.ForeignKey(
                        help_text="The table that this field rule applies to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="field_rules",
                        related_query_name="field_rules",
                        to="database.table",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                baserow.core.mixins.PolymorphicContentTypeMixin,
                models.Model,
                baserow.core.mixins.WithRegistry,
            ),
        ),
    ]
