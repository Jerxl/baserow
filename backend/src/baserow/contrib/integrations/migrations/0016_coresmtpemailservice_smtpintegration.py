# Generated by Django 5.0.13 on 2025-07-04 10:18

import django.db.models.deletion
from django.db import migrations, models

import baserow.core.formula.field


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0100_auto_20250610_1917"),
        ("integrations", "0015_localbaserowlistrows_default_result_count"),
    ]

    operations = [
        migrations.CreateModel(
            name="CoreSMTPEmailService",
            fields=[
                (
                    "service_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.service",
                    ),
                ),
                (
                    "from_email",
                    baserow.core.formula.field.FormulaField(
                        help_text="The sender's email address."
                    ),
                ),
                (
                    "from_name",
                    baserow.core.formula.field.FormulaField(
                        blank=True, help_text="The sender's name."
                    ),
                ),
                (
                    "to_emails",
                    baserow.core.formula.field.FormulaField(
                        help_text="Comma-separated list of recipient email addresses."
                    ),
                ),
                (
                    "cc_emails",
                    baserow.core.formula.field.FormulaField(
                        blank=True,
                        help_text="Comma-separated list of CC email addresses.",
                    ),
                ),
                (
                    "bcc_emails",
                    baserow.core.formula.field.FormulaField(
                        blank=True,
                        help_text="Comma-separated list of BCC email addresses.",
                    ),
                ),
                (
                    "subject",
                    baserow.core.formula.field.FormulaField(
                        help_text="The email subject."
                    ),
                ),
                (
                    "body_type",
                    models.CharField(
                        choices=[("plain", "Plain Text"), ("html", "HTML")],
                        default="plain",
                        help_text="The type of the email body (plain text or HTML).",
                        max_length=10,
                    ),
                ),
                (
                    "body",
                    baserow.core.formula.field.FormulaField(
                        help_text="The email body content."
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.service",),
        ),
        migrations.CreateModel(
            name="SMTPIntegration",
            fields=[
                (
                    "integration_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.integration",
                    ),
                ),
                (
                    "host",
                    models.CharField(
                        help_text="The SMTP server hostname or IP address.",
                        max_length=255,
                    ),
                ),
                (
                    "port",
                    models.PositiveIntegerField(
                        default=587, help_text="The SMTP server port."
                    ),
                ),
                (
                    "use_tls",
                    models.BooleanField(
                        default=True, help_text="Whether to use TLS encryption."
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        help_text="The SMTP username for authentication.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="The SMTP password for authentication.",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.integration",),
        ),
    ]
